<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bookchigo.dao.mybatis.mapper.SellMapper">
  <cache />
  
  <select id="getSellList" resultType="SellItem"> <!-- 판매 리스트 불러오기 -->
  	SELECT *
  	FROM SELLITEM
  </select>
  
  <select id="getSellByItemId" resultType="SellItem"> <!-- itemId로 판매 게시글 세부 정보 불러오기 -->
  	SELECT *
  	FROM SELLITEM
  	WHERE sell_itemId = #{value}
  </select>
  
  <select id="getMemberIdbyItemId" resultType="int"> <!-- itemId로 memberId 구하기 for 판매자, 구매자 구분 -->
  	SELECT memberId
  	FROM SELLITEM
  	WHERE sell_itemId = #{value}
  </select>
  
  <select id="getSellListByItemName" resultType="SellItem"> <!-- itemName으로 판매 게시글들 검색 -->
  	SELECT *
  	FROM SELLITEM
  	WHERE sell_itemName = #{value}
  </select>
  
  <select id="getSellListByMemberId" resultType="SellItem"> <!-- 판매자의 판매글 전체 조회 -->
  	SELECT *
  	FROM SELLITEM
  	WHERE memberId = #{value}
  </select>
  
  <select id="getAccountByMemberId" resultType="java.lang.String">
  	SELECT account
  	FROM MEMBER
  	WHERE memberId = #{value} 
  </select>
  
  <insert id="insertSellItem" parameterType="SellItem"> <!-- 판매글 등록, sell_itemId는 oracle에서 sequence 설정해서 1부터 증가시키는 방식으로 사용 -->
  	<selectKey keyProperty="sell_itemId" resultType="int" order="BEFORE">	
		select auto_increment_sell.nextval FROM DUAL 
	</selectKey>
  	
  	INSERT INTO SELLITEM 
  		(sell_itemid, sell_itemname, sell_price, sell_author, sell_publisher, sell_info, sell_image, deal_method, deal_status, memberId, account)
  	VALUES 
  		(#{sell_itemId}, #{sell_itemName}, #{sell_price}, #{sell_author}, #{sell_publisher}, #{sell_info}, #{sell_image}, #{deal_method}, 0, #{memberId}, #{account})
  </insert>
  
  <select id="getNamebyId" resultType="String"> <!-- memberId로 이름 구하기 -->
  	SELECT name
  	FROM MEMBER
  	WHERE memberId = #{value}
  </select>
  
  <select id="getCountbyId" resultType="int"> <!-- memberId로 tradeCount 구하기 -->
  	SELECT tradeCount
  	FROM MEMBER
  	WHERE memberId = #{value}
  </select>
  
  <update id="updateName" parameterType="SellItem"> <!-- 판매글 등록의 연장선, name 값 설정 -->
  	UPDATE SELLITEM SET
  		name = #{name}
  	WHERE memberId = #{memberId}
  </update>
  
  <update id="updateCountPlus" parameterType="int"> <!-- 판매글 등록의 연장선, tradeCount 증가 -->
  	UPDATE MEMBER SET
  		tradeCount = tradeCount + 1
  	WHERE memberId = #{value}
  </update>
  
  <update id="updateSellItem" parameterType="SellItem"> <!-- 판매글 수정 -->
  	UPDATE SELLITEM SET
  		sell_itemname = #{sell_itemName},
  		sell_price = #{sell_price},
  		sell_author = #{sell_author},
  		sell_publisher = #{sell_publisher},
  		sell_info = #{sell_info},
  		sell_image = #{sell_image},
  		deal_method = #{deal_method}
  	WHERE sell_itemid = #{sell_itemId} and memberId=#{memberId}
  </update>
  
  <update id="updateWishList" parameterType="SellItem">
  	UPDATE WISHLIST SET
  		sell_itemname = #{sell_itemName},
  		sell_price = #{sell_price},
  		sell_image = #{sell_image}
  	WHERE sell_itemid = #{sell_itemId}
  </update>
  
  <select id="getMemberIdBySell" resultType="int"> <!-- memberId 구하기 for 판매글 삭제에 의한 tradeCount 감소 -->
  	SELECT memberId
  	FROM SELLITEM	
  	WHERE sell_itemid = #{sell_itemId}
  </select>
  
  <delete id="deleteSellItem"> <!-- 판매글 삭제 -->
  	DELETE FROM SELLITEM
  	WHERE sell_itemid = #{sell_itemId}
  </delete>
  
  <update id="updateCountMinus" parameterType="int"> <!-- 판매글 삭제의 연장선, tradeCount 감소 -->
  	UPDATE MEMBER SET
  		tradeCount = tradeCount - 1
  	WHERE memberId = #{value}
  </update>
  
  <update id="updateDealStatus" parameterType="SellItem"> <!-- 거래 상태 변경 -->
  	UPDATE SELLITEM SET
  		deal_status = #{deal_status}
  	WHERE sell_itemid = #{sell_itemId}
  </update>
  
  <update id="updateWishStatus" parameterType="SellItem">
  	UPDATE WISHLIST SET
  		deal_status = #{deal_status}
  	WHERE sell_itemid = #{sell_itemId}
  </update>
  
  <select id="getDealStatus" resultType="int"> <!-- 거래 상태 가져오기 for 거래 중/판매 완료 상태이면 채팅 금지, 수정 금지 -->
  	SELECT deal_status
  	FROM SELLITEM
  	WHERE sell_itemid = #{sell_itemId}
  </select>
  
  <insert id="insertWishlist" parameterType="Wishlist"> <!-- 즐겨찾기 등록, wish_id는 oracle에서 sequence 설정해서 1부터 증가시키는 방식으로 사용 -->
  	<selectKey keyProperty="wish_id" resultType="int" order="BEFORE">	
		select auto_increment_wish.nextval FROM DUAL 
	</selectKey>
  	
  	INSERT INTO WISHLIST
  		(wish_id, memberId, sell_itemId, sell_itemName, sell_price, sell_image, deal_status, account)
  	VALUES
  		(#{wish_id}, #{memberId}, #{sell_itemId}, #{sell_itemName}, #{sell_price}, #{sell_image}, #{deal_status}, #{account})
  </insert>
  
  <select id="selectWishlist" resultType="Wishlist"> <!-- 즐겨찾기 조회 -->
  	SELECT *
  	FROM WISHLIST
  	WHERE memberId = #{value}
  </select>
  
  <select id="selectAllWishlist" resultType="Wishlist"> <!-- 즐겨찾기 조회 -->
  	SELECT *
  	FROM WISHLIST
  </select>
  
  <delete id="deleteWishlist"> <!-- 즐겨찾기 삭제 -->
  	DELETE FROM WISHLIST
  	WHERE wish_id = #{value}
  </delete>
  
  <select id="getMemberIdbyId" resultType="int" parameterType="java.lang.String"> <!-- id 통해서 memberId 뽑아내기 for 주문 완료 아이템 등록 -> controller에서 호출하여 BuyFin.setMemberId(...) 후 insertBuyFin 호출 -->
  	SELECT memberId
  	FROM MEMBER
  	WHERE id = #{value}
  </select>

  <insert id="insertBuyFin" parameterType="BuyFin">  <!-- 주문 완료 아이템 등록, sellfin_id는 oracle에서 sequence 설정해서 1부터 증가시키는 방식으로 사용 -->
  	<selectKey keyProperty="sellfin_id" resultType="int" order="BEFORE">	
		select auto_increment_buy.nextval FROM DUAL 
	</selectKey>
  	
  	INSERT INTO BUYFIN
  		(sellfin_id, memberId, sell_itemId, sell_itemName, sell_price, sell_image, deal_method, account)
  	VALUES
  		(#{sellfin_id}, #{memberId}, #{sell_itemId}, #{sell_itemName}, #{sell_price}, #{sell_image}, #{deal_method}, #{account})
  </insert>
  
  <select id="selectBuyFin" resultType="BuyFin"> <!-- 주문 완료 아이템 조회 -->
  	SELECT *
  	FROM BUYFIN
  	WHERE memberId = #{value}
  </select>
</mapper>